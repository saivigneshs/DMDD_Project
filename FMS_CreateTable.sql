SET SERVEROUTPUT ON;
DECLARE
ROW_CT NUMBER(10);
-- FISHERMAN TABLE CREATION
BEGIN 
    SELECT count(*) into ROW_CT FROM user_tables where table_name = 'FISHERMAN';
    IF(ROW_CT > 0)
    THEN
        DBMS_OUTPUT.PUT_LINE('TABLE FISHERMAN ALREADY EXISTS');
    ELSE
        EXECUTE IMMEDIATE 'CREATE TABLE FISHERMAN
     (	"FM_ID" NUMBER(*,0), 
	"FIRST_NAME" VARCHAR2(100 BYTE), 
	"LAST_NAME" VARCHAR2(100 BYTE), 
	"AGE" NUMBER(*,0), 
	"GENDER" VARCHAR2(1 BYTE), 
	"EXPERIENCE" NUMBER(126), 
	"MOBILE_NO" VARCHAR2(30 BYTE), 
	"EMAIL" VARCHAR2(100 BYTE),
    CONSTRAINT MOBILE_NO_VALIDATION CHECK(REGEXP_LIKE(MOBILE_NO, ''^[0-9]{10}$''))
   )
    ';    
     DBMS_OUTPUT.PUT_LINE('TABLE FISHERMAN CREATED SUCCESSFULLY');
     END IF;
END;
/
-- FISHERMAN_DETAILS TABLE CREATION
BEGIN 
    SELECT count(*) into ROW_CT FROM user_tables where table_name = 'FISHERMAN_DETAILS';
    IF(ROW_CT > 0)
    THEN
        DBMS_OUTPUT.PUT_LINE('TABLE FISHERMAN_DETAILS ALREADY EXISTS');
    ELSE
        EXECUTE IMMEDIATE 'CREATE TABLE FISHERMAN_DETAILS
      (	"FM_ID" NUMBER(*,0), 
	"ADDRESS_1" VARCHAR2(100 BYTE), 
	"ADDRESS_2" VARCHAR2(100 BYTE), 
	"CITY" VARCHAR2(100 BYTE), 
	"STATE" VARCHAR2(100 BYTE), 
	"ZIPCODE" VARCHAR2(100 BYTE)
   )
    ';    
     DBMS_OUTPUT.PUT_LINE('TABLE FISHERMAN_DETAILS CREATED SUCCESSFULLY');
     END IF;
END;
/
-- SLOTS TABLE CREATION 
BEGIN 
    SELECT count(*) into ROW_CT FROM user_tables where table_name = 'SLOTS';
    IF(ROW_CT > 0)
    THEN
        DBMS_OUTPUT.PUT_LINE('TABLE SLOTS ALREADY EXISTS');
    ELSE
        EXECUTE IMMEDIATE 'CREATE TABLE SLOTS
      (	"SLOT_ID" NUMBER, 
	"DAY_OF_WEEK" VARCHAR2(20), 
	"SLOT_TIME" TIMESTAMP (6), 
	"SLOT_COUNT" NUMBER, 
	"SUBLOC_ID" NUMBER
   )
    ';    
     DBMS_OUTPUT.PUT_LINE('TABLE SLOTS CREATED SUCCESSFULLY');
     END IF;
END;
/
-- SUB_LOCATION TABLE CREATION 
BEGIN 
    SELECT count(*) into ROW_CT FROM user_tables where table_name = 'SUB_LOCATION';
    IF(ROW_CT > 0)
    THEN
        DBMS_OUTPUT.PUT_LINE('TABLE SUB_LOCATION ALREADY EXISTS');
    ELSE
        EXECUTE IMMEDIATE 'CREATE TABLE SUB_LOCATION
(	"SUBLOC_ID" NUMBER, 
	"SUBLOC_NAME" VARCHAR2(30 BYTE), 
	"LOC_ID" NUMBER
   )
    ';    
     DBMS_OUTPUT.PUT_LINE('TABLE SUB_LOCATION CREATED SUCCESSFULLY');
     END IF;
END;
/
-- BOOKINGS TABLE CREATION 
BEGIN 
    SELECT count(*) into ROW_CT FROM user_tables where table_name = 'BOOKINGS';
    IF(ROW_CT > 0)
    THEN
        DBMS_OUTPUT.PUT_LINE('TABLE BOOKINGS ALREADY EXISTS');
    ELSE
        EXECUTE IMMEDIATE 'CREATE TABLE BOOKINGS
   (	"BOOKING_ID" NUMBER, 
	"FM_ID" NUMBER, 
	"SLOT_ID" NUMBER, 
	"BOOKING_TIME" TIMESTAMP (6), 
	"BOOK_STATUS" VARCHAR2(30 BYTE),
     CONSTRAINT BOOK_STATUS_CHECK CHECK (BOOK_STATUS IN (''SUCCESS'',''FAILURE'',''PENDING''))
   ) 
    ';    
     DBMS_OUTPUT.PUT_LINE('TABLE BOOKINGS CREATED SUCCESSFULLY');
     END IF;
END;
/
-- FISH_SPECIES TABLE CREATION 
BEGIN 
    SELECT count(*) into ROW_CT FROM user_tables where table_name = 'FISH_SPECIES';
    IF(ROW_CT > 0)
    THEN
        DBMS_OUTPUT.PUT_LINE('TABLE FISH_SPECIES ALREADY EXISTS');
    ELSE
        EXECUTE IMMEDIATE 'CREATE TABLE FISH_SPECIES
   ("FISH_ID" NUMBER(*,0) NOT NULL ENABLE, 
	"SPECIES_NAME" VARCHAR2(30 BYTE) NOT NULL ENABLE, 
	"AVG_LENGTH" FLOAT(126) NOT NULL ENABLE, 
	"ABG_WEIGHTD" FLOAT(126) NOT NULL ENABLE, 
	 CONSTRAINT "FISH_SPECIES_PK" PRIMARY KEY ("FISH_ID"))
   ) 
    ';    
     DBMS_OUTPUT.PUT_LINE('TABLE FISH_SPECIES CREATED SUCCESSFULLY');
     END IF;
END;
/
-- FISH_STATS TABLE CREATION 
BEGIN 
    SELECT count(*) into ROW_CT FROM user_tables where table_name = 'FISH_STATS';
    IF(ROW_CT > 0)
    THEN
        DBMS_OUTPUT.PUT_LINE('TABLE FISH_STATS ALREADY EXISTS');
    ELSE
        EXECUTE IMMEDIATE 'CREATE TABLE FISH_STATS
   (	"FISH_INV_ID" NUMBER(*,0) NOT NULL ENABLE, 
	"FISH_ID" NUMBER(*,0) NOT NULL ENABLE, 
	"TOT_FISH_QTY" NUMBER(*,0) NOT NULL ENABLE, 
	"CURRENT_DATE" TIMESTAMP (6) NOT NULL ENABLE, 
	"SUBLOC_ID" NUMBER(*,0) NOT NULL ENABLE, 
	 CONSTRAINT "FISH_STATS_PK" PRIMARY KEY ("FISH_INV_ID")
   ) 
    ';    
     DBMS_OUTPUT.PUT_LINE('TABLE FISH_STATS CREATED SUCCESSFULLY');
     END IF;
END;
/
-- LOCATION TABLE CREATION 
BEGIN 
    SELECT count(*) into ROW_CT FROM user_tables where table_name = 'LOCATION';
    IF(ROW_CT > 0)
    THEN
        DBMS_OUTPUT.PUT_LINE('TABLE LOCATION ALREADY EXISTS');
    ELSE
        EXECUTE IMMEDIATE 'CREATE TABLE LOCATION
   ("LOC_ID" NUMBER, 
	"LOC_NAME" VARCHAR2(20 BYTE), 
	 PRIMARY KEY ("LOC_ID")
   ) 
    ';    
     DBMS_OUTPUT.PUT_LINE('TABLE LOCATION CREATED SUCCESSFULLY');
     END IF;
END;
/
-- CHECKIN_LOG TABLE CREATION 
BEGIN 
    SELECT count(*) into ROW_CT FROM user_tables where table_name = 'CHECKIN_LOG';
    IF(ROW_CT > 0)
    THEN
        DBMS_OUTPUT.PUT_LINE('TABLE CHECKIN_LOG ALREADY EXISTS');
    ELSE
        EXECUTE IMMEDIATE 'CREATE TABLE CHECKIN_LOG
   ("BOOKING_ID" NUMBER, 
	"CHECKIN_ID" NUMBER, 
	"ENTRY_TIME" TIMESTAMP (6), 
	"COVID_RESULT" VARCHAR2(1 BYTE) COLLATE "USING_NLS_COMP", 
	"IS_PPE_AVAILABLE" VARCHAR2(1 BYTE) COLLATE "USING_NLS_COMP", 
	 PRIMARY KEY ("CHECKIN_ID")
   ) 
    ';    
     DBMS_OUTPUT.PUT_LINE('TABLE CHECKIN_LOG CREATED SUCCESSFULLY');
     END IF;
END;
/
-- CHECKOUT_LOG TABLE CREATION 
BEGIN 
    SELECT count(*) into ROW_CT FROM user_tables where table_name = 'CHECKOUT_LOG';
    IF(ROW_CT > 0)
    THEN
        DBMS_OUTPUT.PUT_LINE('TABLE CHECKOUT_LOG ALREADY EXISTS');
    ELSE
        EXECUTE IMMEDIATE 'CREATE TABLE CHECKOUT_LOG
   ("CHECKIN_ID" NUMBER, 
	"FISH_INV_ID" NUMBER, 
	"CATCH_QTY" NUMBER, 
	"EXIT_TIME" TIMESTAMP (6), 
	 FOREIGN KEY ("CHECKIN_ID")
     REFERENCES CHECKIN_LOG ("CHECKIN_ID") ENABLE, 
	 FOREIGN KEY ("FISH_INV_ID")
     REFERENCES FISH_STATS ("FISH_INV_ID") ENABLE
   ) 
    ';    
     DBMS_OUTPUT.PUT_LINE('TABLE CHECKOUT_LOG CREATED SUCCESSFULLY');
     END IF;
END;
/
-- LOC_STATS TABLE CREATION 
BEGIN 
    SELECT count(*) into ROW_CT FROM user_tables where table_name = 'LOC_STATS';
    IF(ROW_CT > 0)
    THEN
        DBMS_OUTPUT.PUT_LINE('TABLE LOC_STATS ALREADY EXISTS');
    ELSE
        EXECUTE IMMEDIATE 'CREATE TABLE LOC_STATS
   ( "LOC_ID" NUMBER,
    "CURRENT_DATE" DATE,
    "IS_INSECT_SEINED" VARCHAR2(1 BYTE),
    "WATER_TEMP" NUMBER(*,0),
    "LAST_DECON_TIME" TIMESTAMP (6),
    "O2_CONC_LEVEL" NUMBER(38,2),
    "NH4_CONC_LEVEL" NUMBER(38,2),
    "LAST_FEED_DATE" TIMESTAMP (6)
   ) 
    ';    
     DBMS_OUTPUT.PUT_LINE('TABLE LOC_STATS CREATED SUCCESSFULLY');
     END IF;
END;
/


